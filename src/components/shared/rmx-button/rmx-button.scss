@import 'core';

rmx-button {
  display: inline-flex;
  width: fit-content;
  align-items: center;
  color: color($colors, white);
  background-color: color($colors, text-blue);
  margin: 7px 0;
  border-radius: 2px;
  font-size: 1rem;
  font-weight: normal;
  user-select: none;
  outline: none;
  border: none;
  cursor: pointer;
  padding: 15px; // 16px 20px;
  box-shadow: 0 2px 10px color($colors, black, null, null, .3);
  transition: background-color 250ms cubic-bezier(0.23, 1, 0.32, 1); // ease
  // letter-spacing: .04em;

  // height: 36px; // this may be appropriate for smaller, squatter buttons.
  // padding: 0 10px;
  // border: 10px;
  // grid-template-areas: 'app-button-icon app-button-label';
  // grid-gap: 10px;

  &.fit-container {
    width: 15%;
    min-width: 6rem; // ~85px @100%zoom
  }

  &.round {
    border-radius: 25px;
  }

  &:hover {
    background-color: color($colors, blue-light); // var(--darkerGreen);
  }

  &.primary {
    background-color: color($colors, primary);
    &:hover {
      background-color: color($colors, primary-soft);
    }
  }

  &.secondary {
    background-color: color($colors, secondary);
    &:hover {
      background-color: color($colors, secondary-light);
    }
  }

  // This makes sense if we have a translation component built-in.
  // I may implement it that way.
  // & .label {
  //   flex: 1;
  // }

  & .icon {
    // flex: 1;
    padding-inline-end: 8px;
  }

  &.disabled {
    background-color: color($colors, lighter);
    pointer-events: none;
  }

  &.swap {
    // grid-template-areas: 'app-button-label app-button-icon';
    flex-direction: row-reverse;

    & .icon {
      padding-inline-end: 0;
      padding-inline-start: 8px;
    }
  }

  &.center {
    // display: flex;
    justify-content: center;

    &.swap {
      flex-direction: row-reverse;
    }
  }

  &.full {
    width: 100%;
  }
}
