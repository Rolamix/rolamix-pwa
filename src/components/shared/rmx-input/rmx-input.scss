@import 'core';

@keyframes fadeIn {
  0% {
    opacity: 0;
  }

  100% {
    opacity: 1;
  }
}

rmx-input {
  display: block;
  position: relative;
  border-bottom: 1px solid color($colors, lighter);
  // border-radius: 5px;
  // margin-bottom: 25px;

  &:after {
    content: ' ';
    display: block;
    position: absolute;
    bottom: -1px;
    left: 50%;
    transform: translate(-50%, 0);
    max-width: 0;
    width: 100%;
    height: 2px;
    overflow: hidden;
    transition: max-width 450ms cubic-bezier(0.23, 1, 0.32, 1);
    background-color: color($colors, secondary-light);
  }

  & .label {
    position: absolute;
    top: 0;
    transition: all 250ms cubic-bezier(0.23, 1, 0.32, 1);
    transform: scale(1) translate(0, 15px);
    transform-origin: left top 0;
    pointer-events: none;
    user-select: none;
    font-size: 16px;
    color: var(--textColor);
  }

  & .input-wrap {
    display: flex;
    height: 100%;

    & ion-icon {
      position: relative;
      left: -1rem;
    }
  }

  &.small .input-wrap ion-icon {
    left: 0;
  }

  & .input {
    padding: 0;
    width: 100%;
    position: relative;
    border: none;
    outline: none;
    background-color: transparent;
    color: color($colors, text-dark);
    cursor: inherit;
    font-size: 1.4rem;
    height: auto;
    margin: 0;
    overflow: hidden;
    display: block;
    line-height: inherit;
  }

  & .message-container {
    color: color($colors, text-dark);
    transition: opacity 450ms cubic-bezier(0.23, 1, 0.32, 1);
    font-size: 12px;
    transform: translateY(20px);
    position: absolute;
    left: 0;
    bottom: 0;
    animation: 450ms fadeIn cubic-bezier(0.23, 1, 0.32, 1) forwards;
  }

  &.small {
    padding: 5px 5px 5px;

    & .input-wrap {
      & ion-icon .icon-inner {
        padding: 16px 0;
      }
    }
  }

  &.large {
    padding: 5px 20px;

    & .input-wrap {
      & ion-icon .icon-inner {
        padding: 20px 0;
      }
    }
  }

  &.active {
    &:after {
      max-width: 100%;
    }

    & .label {
      transform: scale(0.75);
      color: color($colors, primary);
    }

    & .message-container {
      color: color($colors, primary-soft);
    }
  }

  &.error {
    border-color: color($colors, danger);

    &:after {
      background-color: color($colors, danger);
    }

    & .label {
      color: color($colors, danger);
    }

    & .message-container {
      color: color($colors, danger);
    }
  }
}
